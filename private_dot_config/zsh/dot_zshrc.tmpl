### Settings ###
# Ignore comment lines (#)
setopt interactivecomments

# Set ZLE vi mode
bindkey -v

# C-x C-e to open current line in EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line

# zsh-history-substring-search config
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down


### Aliases ###
# List
alias ls='ls --color=auto'
alias la='ls -a'
alias ll='ls -laFh'

# File ops
# (i)nteractive and (v)erbose
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -iv'
alias mkdir='mkdir -v'
alias rmdir='rmdir -v'
alias ln='ln -v'

# grep
alias grep='grep --color=auto'

# Config
alias ce='$EDITOR $ZDOTDIR/.zshrc'
alias cs='source $ZDOTDIR/.zshrc'

# Programs
alias lg='lazygit'
alias cm='chezmoi'

{{ if eq .chezmoi.os "linux" }}
# Arch
alias sps='sudo pacman -S'
alias spsu='sudo pacman -Syu'
alias spr='sudo pacman -R'
alias sprs='sudo pacman -Rs'
alias spq='sudo pacman -Q'
alias spqi='sudo pacman -Qi'
alias spqt='sudo pacman -Qet'
{{ end }}

{{ if eq .chezmoi.os "darwin" }}
function bi() {
    if brew install $@; then
        echo Dumping Brewfile...
        brew bundle dump -f --file=$HOME/.local/share/chezmoi/packages/Brewfile
    fi
}

function br() {
    if brew remove $@; then
        echo Dumping Brewfile...
        brew bundle dump -f --file=$HOME/.local/share/chezmoi/packages/Brewfile
    fi
}

function bu() {
    if brew upgrade; then
        echo Dumping Brewfile...
        brew bundle dump -f --file=$HOME/.local/share/chezmoi/packages/Brewfile
    fi
}
{{ end }}

# Zellij
alias z='zellij'
function zl() {
  ZJ_SESSIONS=$(zellij list-sessions)
  NO_SESSIONS=$(echo "${ZJ_SESSIONS}" | wc -l)

  if [ "${NO_SESSIONS}" -ge 2 ]; then
    zellij attach \
      "$(echo "${ZJ_SESSIONS}" | fzf)"
  else
    zellij attach -c
  fi
}

# FZF
function fif() {
    if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
    rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}


### Tools ###
# antidote
{{- if eq .chezmoi.os "darwin" }}
source /opt/homebrew/opt/antidote/share/antidote/antidote.zsh
{{- else if eq .chezmoi.os "linux" }}
source /usr/share/zsh-antidote/antidote.zsh
{{- end }}
antidote load ${ZDOTDIR}/.zsh_plugins

# zoxide
eval "$(zoxide init --cmd cd zsh)"

# starship
export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
eval "$(starship init zsh)"

# nnn
n ()
{
    # Block nesting of nnn in subshells
    [ "${NNNLVL:-0}" -eq 0 ] || {
        echo "nnn is already running"
        return
    }

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # If NNN_TMPFILE is set to a custom path, it must be exported for nnn to
    # see. To cd on quit only on ^G, remove the "export" and make sure not to
    # use a custom path, i.e. set NNN_TMPFILE *exactly* as follows:
    #      NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    # The command builtin allows one to alias nnn to n, if desired, without
    # making an infinitely recursive alias
    command nnn "$@"

    [ ! -f "$NNN_TMPFILE" ] || {
        . "$NNN_TMPFILE"
        rm -f "$NNN_TMPFILE" > /dev/null
    }
}

# zellij auto-attach
if [[ "$TERM_PROGRAM" != "vscode" ]]; then
    ZELLIJ_AUTO_EXIT="true"
    eval "$(zellij setup --generate-auto-start zsh)"
fi

# sdkman
{{- if eq .chezmoi.os "linux" }}
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
{{- else if eq .chezmoi.os "darwin" }}
export SDKMAN_DIR=$(brew --prefix sdkman-cli)/libexec
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
# fzf
source "/opt/homebrew/opt/fzf/shell/key-bindings.zsh"
source "/opt/homebrew/opt/fzf/shell/completion.zsh"
{{- end }}
